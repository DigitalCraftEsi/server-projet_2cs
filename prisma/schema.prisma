generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum userStatus {
  actif
  bannis
}

enum distStatus {
  nonAssigne
  Assigne
  horsCirculation
}

enum commandeStatus {
  enAttente
  echouee
  terminee
}

model actionsuspecte {
  idActionSuspecte Int          @id @default(autoincrement())
  dateAction       Int
  description      String       @db.VarChar(200)
  notif            Boolean
  distributeur     distributeur @relation(fields: [idDistributeur], references: [idDistributeur])
  idDistributeur   Int

  @@index([idDistributeur], map: "idDistributeur")
}



model adm {
  idADM         Int        @id @default(autoincrement())
  nomADM        String     @db.VarChar(200)
  prenomADM     String     @db.VarChar(200)
  emailADM      String     @unique(map: "emailADM") @db.VarChar(200)
  telephoneADM  String?    @db.VarChar(200)
  motDePasseADM String     @db.VarChar(200)
  status        userStatus @default(actif)
  client        client     @relation(fields: [idClient], references: [idClient])
  idClient      Int
  picture       String?     @db.VarChar(200)
}

model annoncepublicitaire {
  idAnnonce      Int          @id @default(autoincrement())
  sexe           String       @db.VarChar(50)
  ageMin         Int?
  ageMax         Int?
  video          String?      @db.VarChar(200)
  region         String?      @db.VarChar(200)
  dateDebut      DateTime     @db.DateTime(0)
  dateFin        DateTime     @db.DateTime(0)
  visible        Boolean      @default(true)
  boisson        boisson?     @relation(fields: [idBoisson], references: [idBoisson])
  idBoisson      Int?
  distributeur   distributeur @relation(fields: [idDistributeur], references: [idDistributeur])
  idDistributeur Int
  annonceur      annonceur    @relation(fields: [idAnnonceur], references: [idAnnonceur])
  idAnnonceur    Int
}

model annonceur {
  idAnnonceur        Int                   @id @default(autoincrement())
  nomAnnonceur       String                @db.VarChar(200)
  emailAnnonceur     String                @unique(map: "emailAnnonceur") @db.VarChar(200)
  telephoneAnnonceur String?               @db.VarChar(200)
  annonces           annoncepublicitaire[]
}

model anomalie {
  idAnomalie  Int    @id @default(autoincrement())
  titre       String @db.VarChar(200)
  description String @db.VarChar(200)
  idTache     Int?   @unique(map: "idTache")
}

model boisson {
  idBoisson      Int                   @default(autoincrement())
  nomBoisson     String                @db.VarChar(200)
  tarif          Float
  description    String                @db.VarChar(200)
  image          String?
  eau            Float?
  cafe           Float?
  lait           Float?
  the            Float?
  sucre          Float?
  distributeur   distributeur          @relation(fields: [idDistributeur], references: [idDistributeur])
  idDistributeur Int
  annonces       annoncepublicitaire[]
  commandes      boissoncommande[]

  @@id([idBoisson])
}

model boissoncommande {
  boisson        boisson @relation(fields: [idBoisson], references: [idBoisson])
  idBoisson      Int
  commande       commande @relation(fields: [idCommande], references: [idCommande])
  idCommande     Int
  Quantite       Int

  @@id([idBoisson, idCommande])
}

model client {
  idClient        Int            @id @default(autoincrement())
  nomClient       String         @db.VarChar(200)
  emailClient     String         @unique(map: "emailClient") @db.VarChar(200)
  telephoneClient String?        @db.VarChar(200)
  adms            adm[]
  acs             ac[]
  ams             am[]
  decideurs       decideur[]
  distributeurs   distributeur[]
}

model commande {
  idCommande     Int               @id @default(autoincrement())
  dateCommande   DateTime          @db.DateTime(0)
  prix           Float?
  consommateur   consommateur      @relation(fields: [idConsommateur], references: [idConsommateur])
  idConsommateur Int
  distributeur   distributeur      @relation(fields: [idDistributeur], references: [idDistributeur])
  idDistributeur Int
  boissons      boissoncommande[]
  status        commandeStatus @default(enAttente)
}

model consommateur {
  idConsommateur         Int        @id @default(autoincrement())
  nomConsommateur        String     @db.VarChar(200)
  prenomConsommateur     String     @db.VarChar(200)
  emailConsommateur      String     @unique(map: "emailConsommateur") @db.VarChar(200)
  telephoneConsommateur  String?    @db.VarChar(200)
  motDePasseConsommateur String     @db.VarChar(200)
  commandes              commande[]
  picture       String?     @db.VarChar(200)
  card  card[]
}

model card {
  cardNumber    String  @id
  expiryMonth   String
  expiryYear    String
  holderName    String
  idConsommateur Int
  consommateur  consommateur @relation(fields: [idConsommateur], references: [idConsommateur])
}

model decideur {
  idDecideur         Int        @id @default(autoincrement())
  nomDecideur        String     @db.VarChar(200)
  prenomDecideur     String     @db.VarChar(200)
  emailDecideur      String     @unique(map: "emailDecideur") @db.VarChar(200)
  telephoneDecideur  String?    @db.VarChar(200)
  motDePasseDecideur String     @db.VarChar(200)
  status             userStatus @default(actif)
  client             client     @relation(fields: [idClient], references: [idClient])
  idClient           Int
  picture       String?     @db.VarChar(200)
}

model distributeur {
  idDistributeur       Int                   @id @default(autoincrement())
  adresse              String?               @db.VarChar(200)
  codeDeDeverrouillage String?               @db.VarChar(200)
  longitude            Float?
  latitude             Float?
  statut               String?
  distuid              String                @db.VarChar(200)
  odbuid               String                @db.VarChar(200)
  am                   am?                   @relation(fields: [idAM], references: [idAM])
  idAM                 Int?
  client               client?               @relation(fields: [idClient], references: [idClient])
  idClient             Int?
  boissons             boisson[]
  annonces             annoncepublicitaire[]
  actionsuspecte       actionsuspecte[]
  commandes            commande[]

  @@index([idClient], map: "idClient")
}

model panne {
  idPanne     Int    @id @default(autoincrement())
  titre       String @db.VarChar(200)
  description String @db.VarChar(200)
  idTache     Int?   @unique(map: "idTache")
}

model reclamation {
  idReclamation   Int      @id @default(autoincrement())
  titre           String   @db.VarChar(200)
  description     String   @db.VarChar(200)
  dateReclamation DateTime @db.DateTime(0)
  notif           Boolean
  idCommande      Int

  @@index([idCommande], map: "idCommande")
}

model reponse {
  idReponse     Int      @id @default(autoincrement())
  titre         String   @db.VarChar(200)
  description   String   @db.VarChar(200)
  dateReponse   DateTime @db.DateTime(0)
  notif         Boolean
  idReclamation Int      @unique(map: "idReclamation")
  idAC          Int

  @@index([idAC], map: "idAC")
}

model sadm {
  idSADM         Int     @id @default(autoincrement())
  nomSADM        String  @db.VarChar(200)
  prenomSADM     String  @db.VarChar(200)
  emailSADM      String  @unique(map: "emailSADM") @db.VarChar(200)
  telephoneSADM  String? @db.VarChar(200)
  motDePasseSADM String  @db.VarChar(200)
  picture        String?     @db.VarChar(200)
}


model tache {
  idTache        Int      @id @default(autoincrement())
  dateDebut      DateTime @db.DateTime(0)
  dateFin        DateTime @db.DateTime(0)
  etat           String   @db.VarChar(50)
  notif          Boolean
  idDistributeur Int
  idAM           Int?

  @@index([idAM], map: "idAM")
  @@index([idDistributeur], map: "idDistributeur")
}

model vol {
  idVol          Int      @id @default(autoincrement())
  dateVol        DateTime @db.DateTime(0)
  description    String   @db.VarChar(200)
  notif          Boolean
  idDistributeur Int

  @@index([idDistributeur], map: "idDistributeur")
}

model reclamationauto {
  idReclamationAuto   Int      @id @default(autoincrement())
  dateReclamationAuto DateTime @db.DateTime(0)
  description         String   @db.VarChar(200)
  idCommande          Int      @unique(map: "idCommande")
}

model ac {
  idAC         Int        @id @default(autoincrement())
  nomAC        String     @db.VarChar(200)
  prenomAC     String     @db.VarChar(200)
  emailAC      String     @unique(map: "emailAC") @db.VarChar(200)
  telephoneAC  String?    @db.VarChar(200)
  motDePasseAC String     @db.VarChar(200)
  status       userStatus @default(actif)
  client       client     @relation(fields: [idClient], references: [idClient])
  idClient     Int
  picture       String?     @db.VarChar(200)
}

model am {
  idAM         Int            @id @default(autoincrement())
  nomAM        String         @db.VarChar(200)
  prenomAM     String         @db.VarChar(200)
  emailAM      String         @unique(map: "emailAM") @db.VarChar(200)
  telephoneAM  String?        @db.VarChar(200)
  motDePasseAM String         @db.VarChar(200)
  status       userStatus     @default(actif)
  client       client         @relation(fields: [idClient], references: [idClient])
  idClient     Int
  distributeur distributeur[]
  picture       String?     @db.VarChar(200)

  @@index([idClient], map: "idClient")
}